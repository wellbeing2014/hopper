#####################################################################
##   hopper@zxp   All Rights Reserved.                      2017   ##
#####################################################################
# version
# 版本号
version=1.0_20170420
# environment, dev or prod
# 运行环境：dev-开发环境，prod-生产环境
docview.env=prod

#####################################################################
## DataSource | 数据源
#####################################################################
#jdbc.driverClassName = orcle.jdbc.driver.OracleDriver
#jdbc.url = jdbc:oracle:thin:@192.10.110.231:1521:test01
#jdbc.username = myuser
#jdbc.password = mypassword
#hibernate.dialect = org.hibernate.dialect.Oracle10gDialect
#hibernate.show_sql = true
#hibernate.format_sql = true

jdbc.driver = com.mysql.jdbc.Driver
jdbc.url = jdbc:mysql://localhost:3306/hopper
jdbc.username = root
jdbc.password = 
hibernate.dialect = org.hibernate.dialect.MySQLDialect
hibernate.show_sql = true
hibernate.format_sql = true

##DataSource Global Setting

#配置初始化大小、最小、最大
ds.initialSize=1
ds.minIdle=1
ds.maxActive=20

#配置获取连接等待超时的时间 
ds.maxWait=60000

#配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
ds.timeBetweenEvictionRunsMillis=60000

#配置一个连接在池中最小生存的时间，单位是毫秒
ds.minEvictableIdleTimeMillis=300000

ds.validationQuery=SELECT 'x'

ds.testWhileIdle=true

ds.testOnBorrow=false

ds.testOnReturn=false

#打开PSCache，并且指定每个连接上PSCache的大小 
ds.poolPreparedStatements=false
ds.maxPoolPreparedStatementPerConnectionSize=20

#配置监控统计拦截的filters
ds.filters=stat
#####################################################################
## Data | 数据
#####################################################################
# docview data directory, e.g. /idocv/data/
# 本地文件存放目录，如：/idocv/data/
data.dir=/idocv/data/
# docview data URL prefix, e.g. /data/
# 浏览器访问图片等静态文件的URL前缀，对应反向代理服务配置
data.url=/data/

# Whether auto delete old data, true or false
# 自动删除旧文件开关。true OR false
data.auto.cleanup.switch=false
# auto delete old data check cron
# 自动删除旧文件运行时间点
data.auto.cleanup.cron=0 0 2 * * *
# max data keep days
# 旧文件保留天数
data.max.keep.days=90

#####################################################################
## Restrictions | 限制
#####################################################################
# Supported upload file types, separated by comma, regex can be used: 
# .* matches all types. e.g. doc,docx,xls,xlsx,ppt,pptx,pdf,txt
# 上传文件类型，逗号“,”分割多个类型，支持正则表达式，如：“.*”匹配所有类型
filetype.upload=doc,docx,xls,xlsx,ppt,pptx,pdf,txt
# Supported preview file types. similar to upload types.
# 支持的预览文件类型，配置方式同上
filetype.view=doc,docx,xls,xlsx,ppt,pptx,pdf,txt
# upload max size
# 上传文件大小限制
upload.max.size=20000000
# notice message when over max upload size
# 上传文件超过最大值时的提示信息
upload.max.msg=\u9ed8\u8ba4\u652f\u630120M\u4ee5\u5185\u7684\u6587\u6863\u9884\u89c8\uff0c\u8be6\u60c5\u8bf7\u8054\u7cfb\u7ba1\u7406\u5458\uff01
# Comma separated (,) URL file domain(s) when view doc by URL.
# * means allow ALL, file:/// allow local files, share:// allow network share file
# 允许URL方式预览的域名，逗号分隔，
# *代表允许所有域名，
# file:///允许预览服务器本地文件
# share:// 允许预览网络共享文件
url.view.allow.domains=*
# When beyond previous domain(s), show following message.
# 当URL预览不在以上域名内时的提示信息
url.view.allow.domains.msg=\u4E0D\u5141\u8BB8\u9884\u89C8\u8BE5\u57DF\u540D\u4E0B\u7684\u6587\u6863
# for the sake of security, when view file by URL, some URL substring can be replaced
# format: <before replace 1>@<after replace 1>#<before replace 2>@<after replace 2>
# e.g. if following param configured as "dir1@d:/idocv/data1#dir2@d:/idocv/data2#apiserver@api.idocv.com"
# when incoming URL is http://api.idocv.com/view/url?url=file:///dir1/test.docx
# the "dir1" in the URL will be replaced by d:/idocv/data1, final URL will be:
# http://api.idocv.com/view/url?url=file:///d:/idocv/data1/test.docx
# 为安全起见，以URL方式预览时候，URL参数的部分字符串可重写替换
# 格式：<替换前1>@<替换后1>#<替换前2>@<替换后2>
# 例如：当前参入如果配置为"dir1@d:/idocv/data1#dir2@d:/idocv/data2#apiserver@api.idocv.com"
#       浏览器访问链接为http://api.idocv.com/view/url?url=file:///dir1/test.docx
# 那么，URL里面的"dir1"会被"d:/idocv/data1"替换，实际预览链接相当于（用户浏览器看不到实际链接）：
# http://api.idocv.com/view/url?url=file:///d:/idocv/data1/test.docx
url.view.url.substring.replace=dir1@D:/idocv/data#dir2@E:/idocv/data#apiserver@api.idocv.com
# user&password of FTP(s) when view by url. format: <user1>@<domain1>P<password1>#<user2>@<domain2>P<password2>
# URL预览时支持FTP方式，这里可配置FTP的用户名密码，格式：<用户1>@<域名1>P<密码1>#<用户2>@<域名2>P<密码2>
url.view.ftp.user.and.pass=admin@idocv.comP123456

#####################################################################
## View page | 预览页面
#####################################################################
# Whether load the preview page asynchronously or not
# # 是否异步加载预览页面
view.page.load.async=true
# Whether enable a share page
# 是否开启分享页面
view.page.share=false
# following <view.page.style.***> params can set document view style.
# supported values are: html(pure html), htmlraw(original html), img(single image view), imgall(all image view).
# each style has its pros and cons. html style is more speady and img style is more accurate.
# e.g. view.page.style.***=html
#     document will auto converted to html type and the default view style is html.
#     you can NOT use param type=img to view by image, because it only convert to html.
# e.g. view.page.style.***=html|img
#     document will auto converted to html & image type and the default view style is the first one: html.
#     if you want to view by img style, you can pass param type=img when view doc.
# the difference between those two examples are:
#     the first one only pre-convert to html files
#     the second one will pre-convert to both html and image files.
#       no mater which style you view, it is NO need to wait for convert and it is ready for view it directly.
# 以下参数<view.page.style.***>可以配置文档预览方式
# 支持的方式有：html(纯网页), htmlraw(未处理原始网页), img(单图片), imgall(多图片)
# 每种方式都有优缺点，html方式更快，而图片方式对原始样式保留更好。
# 例1：view.page.style.***=html
#         文档上传后会自动转换为html格式，默认预览格式也是html
#         这时候不能通过参数type=img来以图片方式预览，因为没有配置图片方式，预览服务不会转为图片
# 例2：view.page.style.***=html|img
#          文档上传后会自动转换为html和图片两种格式，默认预览格式是前一种html
#          如果想以图片方式预览，可以在预览链接上加参数type=img或type=imgall
# 以上两个例子的区别：
#     第一个例子只预转换为html格式，第二个例子会预转换为html和图片两种格式的中间文件，以便随时切换预览方式，无需等待
view.page.style.word=html
view.page.style.excel=html
view.page.style.pdf=html

# sync view draw server
# 同步预览画布支持服务
view.page.draw.server=http://draw.idocv.com:8997
# valid duration(minute) of private session id
# 私有文档sessionId有效期，单位：分钟
view.page.private.session.duraion=60

# PPT image quality(resolution by pixel) when view by image(thumb)
# PPT图片预览宽度分辨率像素值(缩略图)
view.img.quality.ppt.thumb.width=480
# PPT image quality(resolution by pixel) when view by image(big image)
# PPT图片预览宽度分辨率像素值(大图)
view.img.quality.ppt.big.width=1024
# PDF image quality(resolution by pixel) when view by image(thumb)
# reference values: a0=2384, a1=1684, a2=1191, a3=420, 0 will NOT convert
# PDF图片预览宽度分辨率像素值(缩略图)
# 参考值：a0=2384, a1=1684, a2=1191, a3=420, 0则不转换
view.img.quality.pdf.thumb.width=0
# PDF image quality(resolution by pixel) when view by image(big image)
# PDF图片预览宽度分辨率像素值(大图)
view.img.quality.pdf.big.width=1191

# which filetypes' images need to be watermarked. e.g. ppt,pptx,pdf
# 需要给哪些类型的文件预览页面上的图片加水印，例如：ppt,pptx,pdf
view.img.watermark.filetype=none
# watermark image path
# 水印图片磁盘路径
view.img.watermark.path=${data.dir}logo.png
# watermark params, e.g. <logo> miff:- | composite -dissolve 50 -gravity southeast -geometry +10+10 - <src> <dest>
# <logo>, <src>, <dest> will be replaced by real image, representing watermark logo, source image and destination image 
# ref: http://www.imagemagick.org/Usage/annotating/#wmark_image
# 水印参数，例如：<logo> miff:- | composite -dissolve 50 -gravity southeast -geometry +10+10 - <src> <dest>
# 其中<logo>, <src>, <dest>这三个参数会被替换为实际图片路径，分别代表水印图片、源图片和目标生成图片。
# 参考：http://www.imagemagick.org/Usage/annotating/#wmark_image
view.img.watermark.params=<logo> miff:- | composite -dissolve 50 -gravity southeast -geometry +10+10 - <src> <dest>

#####################################################################
## Database | 数据库
#####################################################################
# MongoDB Connection String, e.g. mongodb://localhost:27017/docview
# mongodb://docviewUser:docviewPasswd@localhost:27017/docview
# ref: https://api.mongodb.com/java/3.3/com/mongodb/MongoClientURI.html
# MongoDB连接字符串，例如：mongodb://localhost:27017/docview
# mongodb://docviewUser:docviewPasswd@localhost:27017/docview
# 参考：https://api.mongodb.com/java/3.3/com/mongodb/MongoClientURI.html
db.mongodb.connection.string=mongodb://localhost:27017/docview

#####################################################################
## Convert | 转换
#####################################################################
# file converter(s):
# 文件转换器
converter.word2html=/idocv/converter/word2html.exe
converter.html2word=/idocv/converter/pandoc.exe
converter.url2html=/idocv/converter/url2html.jar
converter.word2pdf=/idocv/converter/word2pdf.exe
converter.excel2html=/idocv/converter/excel2html.exe
converter.excel2pdf=/idocv/converter/excel2pdf.exe
converter.ppt2jpg=/idocv/converter/ppt2jpg.exe
converter.pdf2img=/idocv/converter/pdf2img/gswin64c.exe
converter.pdf2html=/idocv/converter/pdf2html/pdf2htmlEX.exe
converter.img2jpg=C:/Program Files/ImageMagick-6.9.0-Q8/convert.exe
converter.audio2mp3=/idocv/converter/ffmpeg.exe
converter.zip2file=/idocv/converter/zip2file/7z.exe
converter.cad2img=/idocv/converter/cad2img/di.exe

# convert switch mode after file uploaded
# 0: Do NOT convert document when upload
# 1: Convert document according to following param(s) when upload successfully(recommended)
# 2: Force convert document instantly and ignore following param(s) when upload successfully.
# 文件上传后的转换模式
# 0：上传后不转换
# 1：上传后根据下面的参数来判断是否转换（推荐）
# 2：不管下面的参数配置是什么，上传后强制立即转换
convert.switch.mode=1
# average upload files within one minute.
# when convert mode is 1 and upload frequency is greater than this,
# instant convert switch automatically turn off.
# 每分钟上传文件个数（5分钟内平均值）
# 如果转换模式设置为1，而且上传频率大于该配置值，则上传后不进行立即转换
convert.switch.threshold.upload.frequency=20
# cpu usage threshold
# cpu使用阈值
convert.switch.threshold.cpu.usage=0.8
# When memory usage rate is higher than this percent and switch mode is 1,
# instant convert switch automatically turn off.
# Double value: 0~1, recommend value: 0.8
# 当内存使用率大于当前配置值，并且转换模式为1，
# 自动关闭上传后立即转换，该值配置范围0～1，推荐配置：0.8
convert.switch.threshold.memory.usage=0.8
# check system load cron, including upload frequency, CPU usage, memory usage, etc.
# if all of these are below their threshold, start batch convert oldest 
# ${convert.batch.size} docs and instant convert switch automatically turn on when
# switch mode is 1.
# 检查系统负载时间点，检查项目包括上传频率、CPU使用率、内存使用率等
# 如果各项指标均在阈值内，则开始批量转换最旧的convert.batch.size个文档，
# 如果这时的转换模式配置的是1，则自动开启上传后立即转换
convert.switch.check.system.load.cron=0 */3 * * * *
# batch size when batch convert
# 批量转换时每批次转换的文档数
convert.batch.size=30
# sleep time(milisecond) between batch file convert
# 每批次转换间的休息时间，单位毫秒
convert.batch.interval=60000
# doc convert pool size, 0 means cpu count
# 文档转换线程池大小，即最大同时转换文档数，如果配置为0，则为CPU核数
convert.pool.size=0

#####################################################################
## Cluster | 集群
#####################################################################
# Whether turn on cluster functionality: true|false
# The following parameters are valid only if this switch is set to true.
# 是否开启集群模式：true或false
# 只有配置为true，接下来的集群参数才生效
cluster.switch=false

# Chunk Size of GridFS (Bytes)
# GridFS块大小，单位字节
cluster.gridfs.db.mongodb.chunk.size=10240000

# The mode when upload original file to Distributed File System.
# 0: Do NOT upload file to DFS.
# 1: Upload file to DFS instantly.
# 2: Upload file to DFS at the time set by "cluster.upload2dfs.cron"
# 上传原始文件到分布式文件系统的模式
# 0：不上传
# 1：预览服务有新文件时，立即将该文件同步上传到DFS分布式文件系统
# 2：在指定时间点上传文件到DFS，时间点由下面的"cluster.upload2dfs.cron"参数配置
cluster.upload2dfs.mode=1

# Cron expression about when to upload file to DFS.
# NOT valid if previous mode set to 0
# e.g. 0 30 0 * * * (upload NEW file(s) to DFS at 00:30:00 AM every day)
# 定义上传文件到DFS的定时任务表达式
# 如果上传模式设置为0，则该参数无效
# 例如：0 30 0 * * * (每天凌晨00点30分上传新文件到DFS分布式文件系统)
cluster.upload2dfs.cron=0 30 0 * * *

# batch size upload to DFS
# 每批上传到DFS的文件个数
cluster.upload2dfs.batch.size=50
# sleep time(milisecond) between batch upload to DFS
# 批量上传文件到DFS时每批次间的休息时间，单位毫秒
cluster.upload2dfs.batch.interval=2000

# DFS upload server url, format: <node1>@<upload url 1>#<node2>@<upload url 2>...
# e.g. node1@http://dfs1.idocv.com/doc/upload#node2@http://dfs2.idocv.com/doc/upload
# DFS分布式文件系统的服务器URL地址，格式：<节点1>@<上传URL1>#<节点2>@<上传URL2>...
# 例如：node1@http://dfs1.idocv.com/doc/upload#node2@http://dfs2.idocv.com/doc/upload
cluster.dfs.server.upload=node1@http://dfs1.idocv.com/doc/upload#node2@http://dfs2.idocv.com/doc/upload

# DFS download server prefix, format: <node1>@<download url 1>#<node2>@<download url 2>...
# each url MUST ending with slash, e.g. node1@http://dfs1.idocv.com/#node2@http://dfs2.idocv.com/
# DFS下载服务器前缀，格式：<节点1>@<下载URl1>#<节点2>@<下载URl2>...
# 每个URL必须以斜杠"/"结尾，例如：node1@http://dfs1.idocv.com/#node2@http://dfs2.idocv.com/
cluster.dfs.server.download=node1@http://dfs1.idocv.com/#node2@http://dfs2.idocv.com/

#####################################################################
## Third Party parameters | 第三方参数
#####################################################################
# Whether check user when view file: true|false
# 验证权限开关：true|false
thd.view.check.switch=false
# which URI should be checked, multi URIs can be seperated by ","
# URIs can be: /doc/upload,/doc/download,/view/, * means check all
# 要验证哪些接口，多个接口间可用","分割，*表示验证所有接口
# 例如: /doc/upload,/doc/download,/view/
thd.view.check.uri=*
# Whether check user everytime or session time
# true: check user auth everytime by <thd.view.check.url>
# false: check result will be saved for session long time until next check
# 是否每次都调用验证接口Whether check user everytime or session time
# true: 每次都调用验证接口<thd.view.check.url>
# false: 在session有效期内只调用一次验证接口
thd.view.check.everytime=false
# View check server url
# 验证接口地址
thd.view.check.url=http://data.idocv.com/check.json
# View check key name, it will be appended to previous url
# e.g. http://data.idocv.com/check.json?authkey=abcdefg
# 验证秘钥名称，验证时会自动拼接到上面的验证接口后面
# 例如：http://data.idocv.com/check.json?authkey=abcdefg
thd.view.check.key.name=authkey
# default view restriction values, including upload, view, read, down and copy
# upload: 0. do NOT allow upload, 1. allow upload
# view: 0. do NOT allow view, 1. allow view
# read: 0. allow read, >0. allow read page size
# down: 0. do NOT allow download, 1. allow download
# copy: 0. do NOT allow copy, 1. allow copy
# menu: 0. do NOT allow contextmenu, 1. allow contextmenu(right click menu)
# print: 0. do NOT allow print, 1. allow print
# info: any information that need show on the page
# 默认权限列表，包括上传、预览、试读、下载和文本拷贝等
# upload: 0. 不允许上传；1. 允许上传
# view: 0. 不允许预览, 1. 允许预览
# read: 0. 允许阅读整个文档, >0. 允许试读指定大小页数
# down: 0. 不允许下载, 1. 允许下载
# copy: 0. 不允许文本拷贝, 1. 允许文本拷贝
# menu: 0. 不允许右键菜单, 1. 允许右键菜单
# print: 0. 不允许打印, 1. 允许打印
# info: 需要在前端页面获取的任何信息
thd.view.check.default={"upload":"1", "view":"1", "read":"0", "down":"1","copy":"1","menu":"1","print":"1","info":"www.idocv.com"}

# Whether save MULTI or UNIQUE copy of the same file when upload several times.
# none: allow duplicate upload, do NOT set to none in production environment.
# url: check URL before view, if already exist a same URL doc, view existing doc directly.
# md5: check md5 before view, if already exist a same md5 doc, view existing doc directly.
# url|md5(recommended): check url & md5 both
# 是否去重。即多次上传相同文档时，是只保存一份还是保存多份
# none：允许重复上传，相同文件保存多份，生产环境不推荐设置该值
# url：根据URL去重，如果已经存在（预览过）相同URL的文档，则直接预览展示之前的文档。
# md5：根据文件MD5去重，如果已经存在（预览过）相同MD5的文档，则直接预览展示之前的文档
# url|md5（推荐）：根据url和MD5值组合去重，先判断url，再判断MD5
thd.upload.unique=url|md5

# If previous(filetype.view) types exceeds default types
# (doc,docx,xls,xlsx,ppt,pptx,pdf,txt), then you can add your own 
# view template, the format is: <extensions>@<template name>#...
# extensions are file extensions and template name is corresponding to 
# JSP file name under "docview\WEB-INF\views\template" folder.
# different extensions are separated by ",", extensions and template name
# are separated by "@", different groups are separated by "#",
# remember: all letters should be lowercase.
# e.g. jpg,gif,png,bmp@image#mp3,midi@audio#avi,rmvb,mp4,mkv@video
# 如果要预览的文件格式超出预览服务支持的格式，您可以添加自己的预览模板，
# 参数格式为：<扩展名11,扩展名12,扩展名13...>@<模板名称1>#<扩展名21,扩展名22,扩展名23...>@<模板名称2>#...
# 扩展名即文件后缀，模板名称对应"docview\WEB-INF\views\template"目录下的JSP文件名称
# 不同扩展名之间用逗号","分隔，扩展名和模板名称间用"@"符号分隔，不同组之间用"#"分隔，所有字母均小写
# 例如：avi,rmvb,mp4,mkv@video
thd.view.template=avi,rmvb,mp4,mkv@video